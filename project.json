
{
    "projects": [
      {
        "name": "Cryptoverse-Cryptocurrency Education and News Platform",
        "description": "Developed a platform for users to learn about cryptocurrencies. Integrated a news aggregation feature,allowing users stay up-to-date with the lates cryptocurrency news Incorporated Chart.js for data visualization and graphing. Successfully integrated an external API (Rapid API) into the project. Developed the front-end with responsive design principles using Ant Design",
        "image": "images/project/CryptoHome.png",
        "technologies": ["ReactJS", "Ant Design", "Rapid API"," Chart.js"],
        "link": "https://cryptos-live.netlify.app/" 
      },
      {
        "name": "FreeBook-Note-Taking Application",
        "description": "Implemented user authentication, login, and signup functionality using encryption and token-based authentication. Developed CRUD functionality for notes using RESTful API design principles and HTTP methods. Designed data model, schema, and query optimization for MongoDB. Developed the front-end with responsive design principles using Bootstrap.",
        "image": "images/project/FreeBookHome.png",
        "technologies": ["ReactJS", "Node.js","ExpressJS","Bootstrap", "MongoDB"],
        "link": "https://freebook-website.netlify.app/login" 
      }
      ,
      {
        "name": "Talk2Me-Video Call and Chat Application",
        "description":"Implemented user authentication, login, and signup functionality using encryption and token-based  authentication. Integrated video call functionality using WebRTC and PeerJS. Developed chat functionality using WebSocket and Socket.io Designed data model, schema, and query optimization for MongoDB.",
        "image": "images/project/talkTome.png",
        "technologies": ["ReactJS", "Socket.io", "PeerJS", "Node.js","ExpressJS","MongoDB","Tailwind CSS" ],
        "link": "https://talk02me.netlify.app/login" 
      },
      {
        "name": "Postman Beta",
        "description":"Postman Beta is a web application developed using React for the client-side, Express for the backend, and MongoDB for the database. It provides users with the ability to check their APIs, make multiple requests simultaneously, and manage and save their important APIs for future use.",
        "image": "images/project/postmanApi.png",
        "technologies": ["ReactJS", "Tailwind CSS", "Node.js","ExpressJS","MongoDB","Google Auth 2.0" ],
        "link": "https://postman-071b.onrender.com" 
      }
    ]
  }
  